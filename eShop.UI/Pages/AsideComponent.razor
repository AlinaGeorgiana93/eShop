

<!--Här gör vi lista på sidan-->﻿
<aside 
id="aside-menu" 
class="d-flex flex-column m-2 ms-0 mt-0 p-2 pt-0 bg-body-secondary vh-100">
style="min-width:160px; max-width:200px;">
    
    @foreach (var group in Service!.CategoryLinkGroups)                             @* för varje gång den loopar tar den det aktuella gruppen,
                                                                                    skapa en ny komponent(CategoryLinkGroups) och skicka in datat. *@
    {
      <LinkMainComponent LinkGroup="group" OnAsideCall="OnAsideCallback"/>          @* här säger vi för varje loop/kategorigrupp/länkgrupp, 
                                                                                    så skapar vi en komponent och använder det för att visa datat, 
                                                                                    och eftersom vi talade om att i linkmaincomponent tar vi in en 
                                                                                    linkgroupdå måste vi skicka in den som en parameter. vi talar 
                                                                                    att vi vill ta emot en linkgroup och vad den ska innehålla, 
                                                                                    och variabelnamnet på det vi vill skicka in (group) 
                                                                                    och sedan hoppa in i linkmaincomponent så vi kan visa den 
                                                                                    med html och razor-->

                                                                                     <!--För att kunna visa en Sidoruta med lista av kategorier måste 
                                                                                     vi skapa en LinkMainComponent som måste få in namn och en lista 
                                                                                     på dom länkar som vi ska visa. Det får vi in via "group". 
                                                                                     LinkGroup som är kopplad till group som innehåller Name och 
                                                                                     en lista av LinkOptions  *@
    }
</aside>

@code {
    [CascadingParameter(Name = "Service")] public UIService? Service { get; set; } //Här får vi in vår Service och deklarerar den som en property(UIService) 
                                                                                   //eftersom det var den typen vi initierade (index/inject). Via denna 
                                                                                   //Parameter kan vi använda oss utav datat via UI.Service - List<LinkGroup. 
                                                                                   //istället för att använda Listan på rad 43, vi använda länkgruppen via UI.Service - List<LinkGroup

    [Parameter] public EventCallback OnChange { get; set; } //Här har vi en sista Parameter för att starta ett event och skicka 
                                                            //det vidare till index för att uppdatera hela sidan. Vi behöver inte 
                                                            //skicka något id i detta skede, vi vill bara trigga igång ett event 
                                                            //som inte gör något eftersom det får sidan att uppdateras. 

    async Task OnAsideCallback(int id) 
    {
        if (OnChange.HasDelegate && Service is not null) //tar emot id kontrollerar att det finns en prenumeration på OnChange från huvudsida så vi kan uppdatera sidan via InvokeAsync och kontrollerar att Service inte är null för då kan vi inte anropa metoden.
        {
            await Service.OnCategoryLinkClick(id); // här anropar vi metoden från UIService, await eftersom den här asyncron. 
            await OnChange.InvokeAsync(); //uppdaterar sidan , prenumereras på index.razor
        }
    }


    protected override async Task OnInitializedAsync()
    {
        if (Service is not null) //vi kontrollerar att tjänsten som vi anropar inte är null. 
        {
            await Service.GetLinkGroup(); //om den inte är null går vi vidare och anropar GetLinkGroup
            await OnChange.InvokeAsync(); //anropar OnChange för att påkalla uppmärksamhet på huvudsidan, något har hänt så den ska uppdateras, hoppar till aside
        }
    }

    /*List<LinkGroup> CategoryLinkGroups { get; set; } = new() //varje linkgroup som kommer in i group variabeln 
                                                             //ovanför kommer motsvara en kategoriruta på sidan index.
    {
        new LinkGroup()
        {
            Name = "Category",
            LinkOptions = new()
            {
                new LinkOption { Id = 1, Name ="Women", IsSelected = true },
                new LinkOption { Id = 2, Name ="Men", IsSelected = false },
                new LinkOption { Id = 3, Name ="Children", IsSelected = false },
            }

        }
    };*/
}
